// Code generated by go-swagger; DO NOT EDIT.

package icon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

//go:generate mockery --name API --keeptree --with-expecter --case underscore

// API is the interface of the icon client
type API interface {
	/*
	   GetIcon gets artifact icon

	   Get the artifact icon with the specified digest. As the original icon image is resized and encoded before returning, the parameter "digest" in the path doesn't match the hash of the returned content*/
	GetIcon(ctx context.Context, params *GetIconParams) (*GetIconOK, error)
}

// New creates a new icon API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry, authInfo runtime.ClientAuthInfoWriter) *Client {
	return &Client{
		transport: transport,
		formats:   formats,
		authInfo:  authInfo,
	}
}

/*
Client for icon API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
	authInfo  runtime.ClientAuthInfoWriter
}

/*
GetIcon gets artifact icon

Get the artifact icon with the specified digest. As the original icon image is resized and encoded before returning, the parameter "digest" in the path doesn't match the hash of the returned content
*/
func (a *Client) GetIcon(ctx context.Context, params *GetIconParams) (*GetIconOK, error) {

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getIcon",
		Method:             "GET",
		PathPattern:        "/icons/{digest}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetIconReader{formats: a.formats},
		AuthInfo:           a.authInfo,
		Context:            ctx,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	switch value := result.(type) {
	case *GetIconOK:
		return value, nil
	case *GetIconBadRequest:
		return nil, runtime.NewAPIError("unsuccessful response", value, value.Code())
	case *GetIconNotFound:
		return nil, runtime.NewAPIError("unsuccessful response", value, value.Code())
	case *GetIconInternalServerError:
		return nil, runtime.NewAPIError("unsuccessful response", value, value.Code())
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getIcon: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}
